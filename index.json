{
  "api/Unosquare.FFME.MediaLogMessageType.html": {
    "href": "api/Unosquare.FFME.MediaLogMessageType.html",
    "title": "Enum MediaLogMessageType | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Enum MediaLogMessageType Defines the different log message types received by the log handler Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax public enum MediaLogMessageType Fields Name Description Debug The debug messge type Error The error messge type Info The information messge type None The none messge type Trace The trace messge type Warning The warning messge type"
  },
  "api/Unosquare.FFME.MediaOpeningRoutedEventArgs.html": {
    "href": "api/Unosquare.FFME.MediaOpeningRoutedEventArgs.html",
    "title": "Class MediaOpeningRoutedEventArgs | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaOpeningRoutedEventArgs Represents the event arguments of the MediaOpening routed event. Inheritance System.Object MediaOpeningRoutedEventArgs Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax public class MediaOpeningRoutedEventArgs : RoutedEventArgs Constructors MediaOpeningRoutedEventArgs(RoutedEvent, Object, MediaOptions) Initializes a new instance of the MediaOpeningRoutedEventArgs class. Declaration public MediaOpeningRoutedEventArgs(RoutedEvent routedEvent, object source, MediaOptions options) Parameters Type Name Description RoutedEvent routedEvent The routed event. System.Object source The source. MediaOptions options The options. Properties Options Set or change the options before the media is opened. Declaration public MediaOptions Options { get; } Property Value Type Description MediaOptions"
  },
  "api/Unosquare.FFME.MediaElement.html": {
    "href": "api/Unosquare.FFME.MediaElement.html",
    "title": "Class MediaElement | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaElement Represents a control that contains audio and/or video. In contrast with System.Windows.Controls.MediaElement, this version uses the FFmpeg library to perform reading and decoding of media streams. Inheritance System.Object MediaElement Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax public sealed class MediaElement : UserControl, IDisposable, INotifyPropertyChanged, IUriContext Constructors MediaElement() Initializes a new instance of the MediaElement class. Declaration public MediaElement() Fields BalanceProperty The DependencyProperty for the MediaElement.Balance property. Declaration public static readonly DependencyProperty BalanceProperty Field Value Type Description DependencyProperty BufferingEndedEvent BufferingEnded is a routed event Declaration public static readonly RoutedEvent BufferingEndedEvent Field Value Type Description RoutedEvent BufferingStartedEvent BufferingStarted is a routed event Declaration public static readonly RoutedEvent BufferingStartedEvent Field Value Type Description RoutedEvent IsMutedProperty The DependencyProperty for the MediaElement.IsMuted property. Declaration public static readonly DependencyProperty IsMutedProperty Field Value Type Description DependencyProperty LoadedBehaviorProperty The DependencyProperty for the MediaElement.LoadedBehavior property. Declaration public static readonly DependencyProperty LoadedBehaviorProperty Field Value Type Description DependencyProperty MediaEndedEvent MediaEnded is a routed event Declaration public static readonly RoutedEvent MediaEndedEvent Field Value Type Description RoutedEvent MediaFailedEvent MediaFailedEvent is a routed event. Declaration public static readonly RoutedEvent MediaFailedEvent Field Value Type Description RoutedEvent MediaOpenedEvent MediaOpened is a routed event. Declaration public static readonly RoutedEvent MediaOpenedEvent Field Value Type Description RoutedEvent MediaOpeningEvent MediaOpeningEvent is a routed event. Declaration public static readonly RoutedEvent MediaOpeningEvent Field Value Type Description RoutedEvent PositionProperty The DependencyProperty for the MediaElement.Position property. Declaration public static readonly DependencyProperty PositionProperty Field Value Type Description DependencyProperty ScrubbingEnabledProperty The DependencyProperty for the MediaElement.ScrubbingEnabled property. Declaration public static readonly DependencyProperty ScrubbingEnabledProperty Field Value Type Description DependencyProperty SourceProperty DependencyProperty for FFmpegMediaElement Source property. Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty SpeedRatioProperty The DependencyProperty for the MediaElement.SpeedRatio property. Declaration public static readonly DependencyProperty SpeedRatioProperty Field Value Type Description DependencyProperty StretchDirectionProperty DependencyProperty for StretchDirection property. Declaration public static readonly DependencyProperty StretchDirectionProperty Field Value Type Description DependencyProperty StretchProperty DependencyProperty for Stretch property. Declaration public static readonly DependencyProperty StretchProperty Field Value Type Description DependencyProperty UnloadedBehaviorProperty The DependencyProperty for the MediaElement.UnloadedBehavior property. Declaration public static readonly DependencyProperty UnloadedBehaviorProperty Field Value Type Description DependencyProperty VolumeProperty The DependencyProperty for the MediaElement.Volume property. Declaration public static readonly DependencyProperty VolumeProperty Field Value Type Description DependencyProperty Properties AudioBitrate Gets the audio bitrate. Only valid after the MediaOpened event has fired. Declaration public int AudioBitrate { get; } Property Value Type Description System.Int32 AudioBitsPerSample Gets the audio bits per sample. Only valid after the MediaOpened event has fired. Declaration public int AudioBitsPerSample { get; } Property Value Type Description System.Int32 AudioChannels Gets the audio channels count. Only valid after the MediaOpened event has fired. Declaration public int AudioChannels { get; } Property Value Type Description System.Int32 AudioCodec Gets the audio codec. Only valid after the MediaOpened event has fired. Declaration public string AudioCodec { get; } Property Value Type Description System.String AudioSampleRate Gets the audio sample rate. Only valid after the MediaOpened event has fired. Declaration public int AudioSampleRate { get; } Property Value Type Description System.Int32 Balance Gets/Sets the Balance property on the MediaElement. Note: Balance changes are not yet supported. Value will always be 0; Declaration public double Balance { get; set; } Property Value Type Description System.Double BufferCacheLength The wait packet buffer length. It is adjusted to 1 second if bitrate information is available. Otherwise, it's simply 512KB Declaration public int BufferCacheLength { get; } Property Value Type Description System.Int32 BufferingProgress Gets a value that indicates the percentage of buffering progress made. Range is from 0 to 1 Declaration public double BufferingProgress { get; } Property Value Type Description System.Double CanPause Returns whether the currently loaded media can be paused. This is only valid after the MediaOpened event has fired. Note that this property is computed based on wether the stream is detected to be a live stream. Declaration public bool CanPause { get; } Property Value Type Description System.Boolean DownloadCacheLength Gets the maximum packet buffer length, according to the bitrate (if available). If it's a realtime stream it will return 30 times the buffer cache length. Otherwise, it will return 4 times of the buffer cache length. Declaration public int DownloadCacheLength { get; } Property Value Type Description System.Int32 DownloadProgress Gets a value that indicates the percentage of download progress made. Range is from 0 to 1 Declaration public double DownloadProgress { get; } Property Value Type Description System.Double FFmpegDirectory Gets or sets the FFmpeg path from which to load the FFmpeg binaries. You must set this path before setting the Source property for the first time on any instance of this control. Settng this property when FFmpeg binaries have been registered will throw an exception. Declaration public static string FFmpegDirectory { get; set; } Property Value Type Description System.String HasAudio Returns whether the given media has audio. Only valid after the MediaOpened event has fired. Declaration public bool HasAudio { get; } Property Value Type Description System.Boolean HasMediaEnded Gets a value indicating whether the media has reached its end. Declaration public bool HasMediaEnded { get; } Property Value Type Description System.Boolean HasVideo Returns whether the given media has video. Only valid after the MediaOpened event has fired. Declaration public bool HasVideo { get; } Property Value Type Description System.Boolean HorizontalAlignment Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control. Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment IsBuffering Get a value indicating whether the media is buffering. Declaration public bool IsBuffering { get; } Property Value Type Description System.Boolean IsLiveStream Returns whether the currently loaded media is live or realtime This is only valid after the MediaOpened event has fired. Declaration public bool IsLiveStream { get; } Property Value Type Description System.Boolean IsMuted Gets/Sets the IsMuted property on the MediaElement. Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean IsOpen Gets a value indicating whether this media element currently has an open media url. Declaration public bool IsOpen { get; } Property Value Type Description System.Boolean IsOpening Gets a value indicating whether the media is in the process of opening. Declaration public bool IsOpening { get; } Property Value Type Description System.Boolean IsPlaying Gets a value indicating whether the media is playing. Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean IsSeekable Gets a value indicating whether the currently loaded media can be seeked. Declaration public bool IsSeekable { get; } Property Value Type Description System.Boolean LoadedBehavior Specifies the behavior that the media element should have when it is loaded. The default behavior is that it is under manual control (i.e. the caller should call methods such as Play in order to play the media). If a source is set, then the default behavior changes to to be playing the media. If a source is set and a loaded behavior is also set, then the loaded behavior takes control. Declaration public MediaState LoadedBehavior { get; set; } Property Value Type Description MediaState MediaFormat Gets the media format. Returns null when media has not been loaded. Declaration public string MediaFormat { get; } Property Value Type Description System.String MediaState Gets the current playback state. Declaration public MediaState MediaState { get; } Property Value Type Description MediaState Metadata Provides key-value pairs of the metadata contained in the media. Returns null when media has not been loaded. Declaration public ICollectionView Metadata { get; } Property Value Type Description ICollectionView NaturalDuration Gets the Media's natural duration Only valid after the MediaOpened event has fired. Declaration public Duration NaturalDuration { get; } Property Value Type Description Duration NaturalVideoHeight Returns the natural height of the media in the video. Only valid after the MediaOpened event has fired. Declaration public int NaturalVideoHeight { get; } Property Value Type Description System.Int32 NaturalVideoWidth Returns the natural width of the media in the video. Only valid after the MediaOpened event has fired. Declaration public int NaturalVideoWidth { get; } Property Value Type Description System.Int32 Position Gets/Sets the Position property on the MediaElement. Declaration public TimeSpan Position { get; set; } Property Value Type Description System.TimeSpan ScrubbingEnabled Gets/Sets the ScrubbingEnabled property on the MediaElement. Note: Frame scrubbing is always enabled. The real effect of this property is that when it is set to true, setting values on the Position property occurs synchronously. Wehn it is set to false, setting values on the Position property occurs asyncrhonously Declaration public bool ScrubbingEnabled { get; set; } Property Value Type Description System.Boolean Source Gets/Sets the Source on this MediaElement. The Source property is the Uri of the media to be played. Declaration public Uri Source { get; set; } Property Value Type Description Uri SpeedRatio Gets/Sets the SpeedRatio property on the MediaElement. Declaration public double SpeedRatio { get; set; } Property Value Type Description System.Double Stretch Gets/Sets the Stretch on this MediaElement. The Stretch property determines how large the MediaElement will be drawn. Declaration public Stretch Stretch { get; set; } Property Value Type Description Stretch StretchDirection Gets/Sets the stretch direction of the Viewbox, which determines the restrictions on scaling that are applied to the content inside the Viewbox. For instance, this property can be used to prevent the content from being smaller than its native size or larger than its native size. Declaration public StretchDirection StretchDirection { get; set; } Property Value Type Description StretchDirection UnloadedBehavior Specifies how the underlying media should behave when it has ended. The default behavior is to Close the media. Declaration public MediaState UnloadedBehavior { get; set; } Property Value Type Description MediaState VideoBitrate Gets the video bitrate. Only valid after the MediaOpened event has fired. Declaration public int VideoBitrate { get; } Property Value Type Description System.Int32 VideoCodec Gets the video codec. Only valid after the MediaOpened event has fired. Declaration public string VideoCodec { get; } Property Value Type Description System.String VideoFrameLength Gets the duration in seconds of the video frame. Only valid after the MediaOpened event has fired. Declaration public double VideoFrameLength { get; } Property Value Type Description System.Double VideoFrameRate Gets the video frame rate. Only valid after the MediaOpened event has fired. Declaration public double VideoFrameRate { get; } Property Value Type Description System.Double Volume Gets/Sets the Volume property on the MediaElement. Note: Valid values are from 0 to 1 Declaration public double Volume { get; set; } Property Value Type Description System.Double Methods Close() Closes the currently loaded media. Declaration public void Close() CoerceBalanceProperty(DependencyObject, Object) Declaration public static object CoerceBalanceProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object CoerceIsMutedProperty(DependencyObject, Object) Declaration public static object CoerceIsMutedProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object CoercePositionProperty(DependencyObject, Object) Declaration public static object CoercePositionProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object CoerceSpeedRatioProperty(DependencyObject, Object) Declaration public static object CoerceSpeedRatioProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object CoerceVolumeProperty(DependencyObject, Object) Declaration public static object CoerceVolumeProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() Implements System.IDisposable.Dispose() Pause() Pauses playback of the currently loaded media. Declaration public void Pause() Play() Begins or resumes playback of the currently loaded media. Declaration public void Play() Stop() Pauses and rewinds the currently loaded media. Declaration public void Stop() Events BufferingEnded Occurs when buffering of packets was Ended Declaration public event RoutedEventHandler BufferingEnded Event Type Type Description RoutedEventHandler BufferingStarted Occurs when buffering of packets was started Declaration public event RoutedEventHandler BufferingStarted Event Type Type Description RoutedEventHandler FFmpegMessageLogged Occurs when a logging message from the FFmpeg library has been received. This is shared across all instances of Media Elements Declaration public static event EventHandler<MediaLogMessagEventArgs> FFmpegMessageLogged Event Type Type Description System.EventHandler < MediaLogMessagEventArgs > MediaEnded Raised when the corresponding media ends. Declaration public event RoutedEventHandler MediaEnded Event Type Type Description RoutedEventHandler MediaFailed Raised when the media fails to load or a fatal error has occurred which prevents playback. Declaration public event EventHandler<ExceptionRoutedEventArgs> MediaFailed Event Type Type Description System.EventHandler < ExceptionRoutedEventArgs > MediaOpened Raised when the media is opened Declaration public event RoutedEventHandler MediaOpened Event Type Type Description RoutedEventHandler MediaOpening Raised before the input stream of the media is opened. Use this method to modify the input options. Declaration public event EventHandler<MediaOpeningRoutedEventArgs> MediaOpening Event Type Type Description System.EventHandler < MediaOpeningRoutedEventArgs > MessageLogged Occurs when a logging message has been logged. This does not include FFmpeg messages. Declaration public event EventHandler<MediaLogMessagEventArgs> MessageLogged Event Type Type Description System.EventHandler < MediaLogMessagEventArgs > PropertyChanged Multicast event for property change notifications. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "README.html": {
    "href": "README.html",
    "title": "FFME: WPF MediaElement Alternative | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "FFME: WPF MediaElement Alternative ⭐ Please star this project if you find it useful! MediaElement Status: Still Work in progress (see the Releases section for a code-complete version) Estimated Beta Release Date: 7/2/2017 MediaElement Codename: Michelob (because it uses very little CPU and RAM!) FFmpeg Version: 3.2.4 For a history of commits see the repo: https://github.com/unosquare/ffplaydotnet Features Overview FFME is a close (and I'd like to think better) drop-in replacement for Microsoft's WPF MediaElement Control . While the standard MediaElement uses DirectX (DirectShow) for media playback, FFME uses FFmpeg to read and decode audio and video. This means that for those of you who want to support stuff like HLS playback, or just don't want to go through the hassle of installing codecs on client machines, using FFME might be the answer. FFME provides multiple improvements over the standard MediaElement such as: Asynchronous and synchronous frame scrubbing Fast media seeking and frame-by-frame seeking Properties such as Position, NaturalDuration, SpeedRatio, and Volume are all Dependency Properties! Additional and extended media events. Ability to easily apply filtergraphs. Ability to extract media metadata and tech specs of a media stream (title, album, bitrate, FPS, etc). ... all in a single MediaElement control Known Limitations Your help is welcome! I still have a lot of TODOs in this new version -- but I am getting through them :) SpeedRatio other than 1.0 could adjust audio pitch. Currently, if SpeedRatio is less than 1.0, there is no audio playback, and if SpeedRatio is greater than 1.0, samples just play faster. This situation can be greatly improved by manually manipulating the samples passed to the Audio Renderer. ( Nice to have ) It would be nice to implement a method on the control that is able to extract a copy of the current video frame. There currently is no support for opening capture devices such as webcams or TV cards. While this is not too hard to do, it is not (yet) implemented in this library. Compiling, Running and Testing Please note that I am unable to distribute FFmpeg's binaries because I don't know if I am allowed to do so. Follow the instructions below to compile, run and test FFME Clone this repository. Download the FFmpeg win32-shared binaries from Zeranoe FFmpeg Builds . Extract the contents of the zip file you just downloaded and go to the bin folder that got extracted. You should see 3 exe files and 8 dll files. Select and copy all of them. Now paste all 11 files from the prior step onto a well-known foleder. Take note of the full path. Open the solution and set the Unosquare.FFME.Sample project as the startup project. You can do this by right clicking on the project and selecting Set as startup project Under the Unosquare.FFME.Sample project, locate the line Unosquare.FFME.MediaElement.FFmpegDirectory = @\"C:\\ffmpeg\"; and replace the path so that it points to the folder where you extracted your FFmpeg binaries (dll files). Click on Start to run the project. You should see a very simplistic media player. Enter a URL or a path to a file in the textbox at the bottom of the window and then click on Open . The file or URL should play immediately, and all the properties should display to the right of the media display. You can use the resulting compiled assembly in your project without further dependencies as FFME is entirely self-contained. The locations of the compiled FFME assembly, depending on your build configuration are either ...\\ffmediaelement\\Unosquare.FFME\\bin\\Debug\\Unosquare.FFME.dll or ...\\ffmediaelement\\Unosquare.FFME\\bin\\Release\\Unosquare.FFME.dll Using FFME in your Project The Unosquare.FFME.Sample provides a reference implementation of usage Create a new WPF application Add a reference to Unosquare.FFME.dll In your MainForm.xaml , add the namespace: xmlns:ffme=\"clr-namespace:Unosquare.FFME;assembly=Unosquare.FFME\" Finally, create an instance of the FFME control in your MainForm.xaml as follows: <ffme:MediaElement x:Name=\"MediaEl\" Background=\"Gray\" LoadedBehavior=\"Play\" UnloadedBehavior=\"Manual\" /> Thanks In no particular order To the FFmpeg team for making the Swiss Army Knife of media. I encourage to donate to them. To Kyle Schwarz for creating and making Zeranoe FFmpeg builds available to everyone . To the NAudio team for making the best audio library out there for .NET -- one day I will contribut improvements that they really need :P To Ruslan Balanukhin for his FFmpeg interop bindings generator tool: FFmpeg.AutoGen . To Martin Bohme for his excellent tutorial on creating a video player with FFmpeg. To Barry Mieny for his beautiful FFmpeg logo Similar Projects Microsoft FFmpeg Interop WPF-MediaKit LibVLC.NET Microsoft Player Framework License The NAudio portion of this library Unosquare.FFME\\NAudio is distributed under Ms-PL. Please see LICENSE.txt . Code generated by the FFmpeg.Autogen tool Unosquare.FFME\\FFmpeg.Autogen does not specify a license by the tool's author. The source code of the FFME project excluding the items above is distributed under the Ms-PL."
  },
  "api/Unosquare.FFME.MediaCodecOptions.html": {
    "href": "api/Unosquare.FFME.MediaCodecOptions.html",
    "title": "Class MediaCodecOptions | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaCodecOptions Represents a set of codec options associated with a stream specifier. Inheritance System.Object MediaCodecOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax public class MediaCodecOptions Constructors MediaCodecOptions() Initializes a new instance of the MediaCodecOptions class. Declaration public MediaCodecOptions() Methods Add(String, String, Char) Adds an option Declaration public void Add(string key, string value, char streamType) Parameters Type Name Description System.String key The key. System.String value The value. System.Char streamType Type of the stream. Add(String, String, Char, Int32) Adds an option Declaration public void Add(string key, string value, char streamType, int streamIndex) Parameters Type Name Description System.String key The key. System.String value The value. System.Char streamType Type of the stream. System.Int32 streamIndex Index of the stream. Add(String, String, Int32) Adds an option Declaration public void Add(string key, string value, int streamIndex) Parameters Type Name Description System.String key The key. System.String value The value. System.Int32 streamIndex Index of the stream."
  },
  "api/Unosquare.FFME.MediaContainerException.html": {
    "href": "api/Unosquare.FFME.MediaContainerException.html",
    "title": "Class MediaContainerException | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaContainerException A Media Container Exception Inheritance System.Object System.Exception MediaContainerException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax [Serializable] public class MediaContainerException : Exception, ISerializable, _Exception Constructors MediaContainerException(String) Initializes a new instance of the MediaContainerException class. Declaration public MediaContainerException(string message) Parameters Type Name Description System.String message The message that describes the error. See Also System.Exception"
  },
  "api/Unosquare.FFME.MediaLogMessagEventArgs.html": {
    "href": "api/Unosquare.FFME.MediaLogMessagEventArgs.html",
    "title": "Class MediaLogMessagEventArgs | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaLogMessagEventArgs Represents the contents of alogging message that was sent to the log manager. Inheritance System.Object System.EventArgs MediaLogMessagEventArgs Inherited Members System.EventArgs.Empty System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax public class MediaLogMessagEventArgs : EventArgs Constructors MediaLogMessagEventArgs(MediaElement, MediaLogMessageType, String) Initializes a new instance of the MediaLogMessagEventArgs class. Declaration public MediaLogMessagEventArgs(MediaElement mediaElement, MediaLogMessageType messageType, string message) Parameters Type Name Description MediaElement mediaElement The media element. MediaLogMessageType messageType Type of the message. System.String message The message. Properties Message Gets the contents of the message. Declaration public string Message { get; } Property Value Type Description System.String MessageType Gets the type of the message. Declaration public MediaLogMessageType MessageType { get; } Property Value Type Description MediaLogMessageType Source Gets the intance of the MediaElement that generated this message. When null, it means FFmpeg generated this message. Declaration public MediaElement Source { get; } Property Value Type Description MediaElement TimestampUtc Gets the timestamp. Declaration public DateTime TimestampUtc { get; } Property Value Type Description System.DateTime See Also System.EventArgs"
  },
  "api/Unosquare.FFME.MediaOptions.html": {
    "href": "api/Unosquare.FFME.MediaOptions.html",
    "title": "Class MediaOptions | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaOptions Represents a set of options that are used to initialize a media container. Inheritance System.Object MediaOptions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Unosquare.FFME Assembly : cs.temp.dll.dll Syntax public class MediaOptions Constructors MediaOptions() Declaration public MediaOptions() Properties CodecOptions Gets the codec options. Codec options are documented here: https://www.ffmpeg.org/ffmpeg-codecs.html#Codec-Options Port of codec_opts Declaration public MediaCodecOptions CodecOptions { get; } Property Value Type Description MediaCodecOptions EnableFastDecoding Gets or sets a value indicating whether [enable fast decoding]. Port of fast Declaration public bool EnableFastDecoding { get; set; } Property Value Type Description System.Boolean EnableLowRes Gets or sets a value indicating whether [enable low resource]. In theroy this should be 0,1,2,3 for 1, 1/2, 1,4 and 1/8 resolutions. TODO: We are for now just supporting 1/2 rest (true value) Port of lowres. Declaration public bool EnableLowRes { get; set; } Property Value Type Description System.Boolean ForcedInputFormat Gets or sets the forced input format. If let null or empty, the input format will be selected automatically. Declaration public string ForcedInputFormat { get; set; } Property Value Type Description System.String FormatOptions A dictionary of Format options. Supported format options are specified in https://www.ffmpeg.org/ffmpeg-formats.html#Format-Options Declaration public Dictionary<string, string> FormatOptions { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.String > GeneratePts Gets or sets a value indicating whether PTS are generated automatically and not read from the packets themselves. Defaults to false. Port of genpts Declaration public bool GeneratePts { get; set; } Property Value Type Description System.Boolean IsAudioDisabled Prevent reading from audio stream components. Port of audio_disable Declaration public bool IsAudioDisabled { get; set; } Property Value Type Description System.Boolean IsSubtitleDisabled Prevent reading from subtitle stream components. Port of subtitle_disable Subtitles are not yet first-class citizens in FFmpeg and this is why they are disabled by default. Declaration public bool IsSubtitleDisabled { get; set; } Property Value Type Description System.Boolean IsVideoDisabled Prevent reading from video stream components. Port of video_disable Declaration public bool IsVideoDisabled { get; set; } Property Value Type Description System.Boolean MaxAnalyzeDuration Gets or sets the maximum duration of the analyze. Declaration public TimeSpan MaxAnalyzeDuration { get; set; } Property Value Type Description System.TimeSpan ProbeSize Gets or sets the size of the probe. Declaration public int ProbeSize { get; set; } Property Value Type Description System.Int32 ReadTimeout Gets or sets the amount of time to wait for a an open or read operation to complete. Declaration public TimeSpan ReadTimeout { get; set; } Property Value Type Description System.TimeSpan VideoFilter Allows for a custom video filter string. Please see: https://ffmpeg.org/ffmpeg-filters.html#Video-Filters Declaration public string VideoFilter { get; set; } Property Value Type Description System.String"
  },
  "api/Unosquare.FFME.html": {
    "href": "api/Unosquare.FFME.html",
    "title": "Namespace Unosquare.FFME | FFME: WPF MediaElement replacement based on FFmpeg",
    "keywords": "Namespace Unosquare.FFME Classes MediaCodecOptions Represents a set of codec options associated with a stream specifier. MediaContainerException A Media Container Exception MediaElement Represents a control that contains audio and/or video. In contrast with System.Windows.Controls.MediaElement, this version uses the FFmpeg library to perform reading and decoding of media streams. MediaLogMessagEventArgs Represents the contents of alogging message that was sent to the log manager. MediaOpeningRoutedEventArgs Represents the event arguments of the MediaOpening routed event. MediaOptions Represents a set of options that are used to initialize a media container. Enums MediaLogMessageType Defines the different log message types received by the log handler"
  }
}