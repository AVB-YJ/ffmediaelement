{
  "api/Unosquare.FFmpegMediaElement.MediaElement.html": {
    "href": "api/Unosquare.FFmpegMediaElement.MediaElement.html",
    "title": "Class MediaElement | WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaElement Represents a control that contains audio and/or video. In contrast with System.Windows.Controls.MediaElement, this version uses the FFmpeg library to perform reading and decoding of media streams. Inheritance System.Object MediaElement Namespace :Unosquare.FFmpegMediaElement Assembly :cs.temp.dll.dll Syntax public class MediaElement : UserControl, IDisposable, INotifyPropertyChanged, IUriContext Constructors MediaElement() Initializes a new instance of the MediaElement class. Declaration public MediaElement() Fields BalanceProperty The DependencyProperty for the MediaElement.Balance property. Declaration public static readonly DependencyProperty BalanceProperty Field Value Type Description DependencyProperty IsMutedProperty The DependencyProperty for the MediaElement.IsMuted property. Declaration public static readonly DependencyProperty IsMutedProperty Field Value Type Description DependencyProperty LoadedBehaviorProperty The DependencyProperty for the MediaElement.LoadedBehavior property. Declaration public static readonly DependencyProperty LoadedBehaviorProperty Field Value Type Description DependencyProperty MediaEndedEvent MediaEnded is a routed event Declaration public static readonly RoutedEvent MediaEndedEvent Field Value Type Description RoutedEvent MediaErroredEvent MediaErrorEvent is a routed event. Declaration public static readonly RoutedEvent MediaErroredEvent Field Value Type Description RoutedEvent MediaFailedEvent MediaFailedEvent is a routed event. Declaration public static readonly RoutedEvent MediaFailedEvent Field Value Type Description RoutedEvent MediaOpenedEvent MediaOpened is a routed event. Declaration public static readonly RoutedEvent MediaOpenedEvent Field Value Type Description RoutedEvent PositionProperty The DependencyProperty for the MediaElement.Position property. Declaration public static readonly DependencyProperty PositionProperty Field Value Type Description DependencyProperty RefererProperty Dependency property for the Referer property Declaration public static readonly DependencyProperty RefererProperty Field Value Type Description DependencyProperty ScrubbingEnabledProperty The DependencyProperty for the MediaElement.ScrubbingEnabled property. Declaration public static readonly DependencyProperty ScrubbingEnabledProperty Field Value Type Description DependencyProperty SourceProperty Declaration public static readonly DependencyProperty SourceProperty Field Value Type Description DependencyProperty SpeedRatioProperty The DependencyProperty for the MediaElement.SpeedRatio property. Declaration public static readonly DependencyProperty SpeedRatioProperty Field Value Type Description DependencyProperty StretchDirectionProperty DependencyProperty for StretchDirection property. Declaration public static readonly DependencyProperty StretchDirectionProperty Field Value Type Description DependencyProperty StretchProperty DependencyProperty for Stretch property. Declaration public static readonly DependencyProperty StretchProperty Field Value Type Description DependencyProperty UnloadedBehaviorProperty The DependencyProperty for the MediaElement.UnloadedBehavior property. Declaration public static readonly DependencyProperty UnloadedBehaviorProperty Field Value Type Description DependencyProperty UserAgentProperty Dependency property for the user agent property Declaration public static readonly DependencyProperty UserAgentProperty Field Value Type Description DependencyProperty VolumeProperty The DependencyProperty for the MediaElement.Volume property. Declaration public static readonly DependencyProperty VolumeProperty Field Value Type Description DependencyProperty Properties AudioBitrate Gets the audio bitrate. Only valid after the MediaOpened event has fired. Declaration public int AudioBitrate { get; } Property Value Type Description System.Int32 AudioBytesPerSample Gets the audio bytes per sample. Only valid after the MediaOpened event has fired. Declaration public int AudioBytesPerSample { get; } Property Value Type Description System.Int32 AudioChannels Gets the audio channels count. Only valid after the MediaOpened event has fired. Declaration public int AudioChannels { get; } Property Value Type Description System.Int32 AudioCodec Gets the audio codec. Only valid after the MediaOpened event has fired. Declaration public string AudioCodec { get; } Property Value Type Description System.String AudioOutputBitsPerSample Gets the audio output bits per sample. Only valid after the MediaOpened event has fired. This value will always have to be 16 Declaration public int AudioOutputBitsPerSample { get; } Property Value Type Description System.Int32 AudioOutputSampleRate Gets the audio output sample rate. Only valid after the MediaOpened event has fired. Declaration public int AudioOutputSampleRate { get; } Property Value Type Description System.Int32 AudioSampleRate Gets the audio sample rate. Only valid after the MediaOpened event has fired. Declaration public int AudioSampleRate { get; } Property Value Type Description System.Int32 Balance Gets/Sets the Balance property on the MediaElement. Note: Balance changes are not yet supported. Value will always be 0; Declaration public double Balance { get; set; } Property Value Type Description System.Double CanPause Returns whether the given media can be paused. This is only valid after the MediaOpened event has fired. Note: This property is computed based on wether the stream is detected to be a live stream. Declaration public bool CanPause { get; } Property Value Type Description System.Boolean HasAudio Returns whether the given media has audio. Only valid after the MediaOpened event has fired. Declaration public bool HasAudio { get; } Property Value Type Description System.Boolean HasMediaEnded Gets a value indicating whether the media has reached its end. Declaration public bool HasMediaEnded { get; } Property Value Type Description System.Boolean true if this instance has media ended; otherwise, false . HasVideo Returns whether the given media has video. Only valid after the MediaOpened event has fired. Declaration public bool HasVideo { get; } Property Value Type Description System.Boolean HorizontalAlignment Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control. Declaration public HorizontalAlignment HorizontalAlignment { get; set; } Property Value Type Description HorizontalAlignment IsMuted Gets/Sets the IsMuted property on the MediaElement. Note: Muting Sets the Volume to 0; Unmuting set the volume to what it originally was before muting. Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean IsPlaying Gets a value indicating whether the media is playing. Declaration public bool IsPlaying { get; } Property Value Type Description System.Boolean LoadedBehavior Specifies the behavior that the media element should have when it is loaded. The default behavior is that it is under manual control (i.e. the caller should call methods such as Play in order to play the media). If a source is set, then the default behavior changes to to be playing the media. If a source is set and a loaded behavior is also set, then the loaded behavior takes control. Declaration public MediaState LoadedBehavior { get; set; } Property Value Type Description MediaState NaturalDuration Gets the Media's natural duration Only valid after the MediaOpened event has fired. Declaration public double NaturalDuration { get; } Property Value Type Description System.Double NaturalVideoHeight Returns the natural height of the media in the video. Only valid after the MediaOpened event has fired. Declaration public int NaturalVideoHeight { get; } Property Value Type Description System.Int32 NaturalVideoWidth Returns the natural width of the media in the video. Only valid after the MediaOpened event has fired. Declaration public int NaturalVideoWidth { get; } Property Value Type Description System.Int32 Position Gets/Sets the Position property on the MediaElement. Declaration public decimal Position { get; set; } Property Value Type Description System.Decimal Referer Gets or sets the referer. Property takes effect only upon loading live streams such as m3u8 files. Declaration public string Referer { get; set; } Property Value Type Description System.String The user agent. ScrubbingEnabled Gets/Sets the ScrubbingEnabled property on the MediaElement. Note: Frame scrubbing is always enabled. The real effect of this property is that when it is set to true, setting values on the Position property occurs synchronously. Wehn it is set to false, setting values on the Position property occurs asyncrhonously Declaration public bool ScrubbingEnabled { get; set; } Property Value Type Description System.Boolean Source Gets/Sets the Source on this MediaElement. The Source property is the Uri of the media to be played. Note: Currently, this does not support the pack protocol (pack://) Declaration public Uri Source { get; set; } Property Value Type Description Uri SpeedRatio Gets/Sets the SpeedRatio property on the MediaElement. Declaration public decimal SpeedRatio { get; set; } Property Value Type Description System.Decimal Stretch Gets/Sets the Stretch on this MediaElement. The Stretch property determines how large the MediaElement will be drawn. Declaration public Stretch Stretch { get; set; } Property Value Type Description Stretch StretchDirection Gets/Sets the stretch direction of the Viewbox, which determines the restrictions on scaling that are applied to the content inside the Viewbox. For instance, this property can be used to prevent the content from being smaller than its native size or larger than its native size. Declaration public StretchDirection StretchDirection { get; set; } Property Value Type Description StretchDirection UnloadedBehavior Specifies how the underlying media should behave when the given MediaElement is unloaded, the default behavior is to Close the media. Declaration public MediaState UnloadedBehavior { get; set; } Property Value Type Description MediaState UserAgent Gets or sets the user agent. Property takes effect only upon loading live streams such as m3u8 files. Declaration public string UserAgent { get; set; } Property Value Type Description System.String The user agent. VideoBitrate Gets the video bitrate. Only valid after the MediaOpened event has fired. Declaration public int VideoBitrate { get; } Property Value Type Description System.Int32 VideoCodec Gets the video codec. Only valid after the MediaOpened event has fired. Declaration public string VideoCodec { get; } Property Value Type Description System.String VideoFrameLength Gets the length of the video frame. Only valid after the MediaOpened event has fired. Declaration public decimal VideoFrameLength { get; } Property Value Type Description System.Decimal VideoFrameRate Gets the video frame rate. Only valid after the MediaOpened event has fired. Declaration public decimal VideoFrameRate { get; } Property Value Type Description System.Decimal Volume Gets/Sets the Volume property on the MediaElement. Note: Valid values are from 0 to 1 Declaration public double Volume { get; set; } Property Value Type Description System.Double Methods Close() Closes the media source and releases its resources Declaration public void Close() CoerceBalanceProperty(DependencyObject, Object) Declaration public static object CoerceBalanceProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object CoercePositionProperty(DependencyObject, Object) Declaration public static object CoercePositionProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object CoerceSpeedRatioProperty(DependencyObject, Object) Declaration public static object CoerceSpeedRatioProperty(DependencyObject d, object value) Parameters Type Name Description DependencyObject d System.Object value Returns Type Description System.Object Dispose() Declaration public void Dispose() Implements System.IDisposable.Dispose() Dispose(Boolean) Declaration protected virtual void Dispose(bool alsoManaged) Parameters Type Name Description System.Boolean alsoManaged DumpState(Boolean) Dumps the state into a string dictionary. Optionally, it prints the output to the debugging console Declaration public Dictionary<string, string> DumpState(bool printToDebuggingConsole) Parameters Type Name Description System.Boolean printToDebuggingConsole Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > Finalize() Declaration protected void Finalize() GetCurrentFrame() Gets the current frame being displayed Declaration public WriteableBitmap GetCurrentFrame() Returns Type Description WriteableBitmap Clone of the current frame Pause() Pauses media playback. Declaration public void Pause() Play() Begins playback if not already playing Declaration public void Play() Stop() Stops media playback. Declaration public void Stop() Events MediaEnded Raised when the corresponding media ends. Declaration public event RoutedEventHandler MediaEnded Event Type Type Description RoutedEventHandler MediaErrored Raised when a problem with the media is found Declaration public event EventHandler<MediaErrorRoutedEventArgs> MediaErrored Event Type Type Description System.EventHandler < MediaErrorRoutedEventArgs > MediaFailed Raised when the media fails to load or a fatal error has occurred which prevents playback. Declaration public event EventHandler<MediaErrorRoutedEventArgs> MediaFailed Event Type Type Description System.EventHandler < MediaErrorRoutedEventArgs > MediaOpened Raised when the media is opened Declaration public event RoutedEventHandler MediaOpened Event Type Type Description RoutedEventHandler PropertyChanged Multicast event for property change notifications. Declaration public event PropertyChangedEventHandler PropertyChanged Event Type Type Description PropertyChangedEventHandler"
  },
  "README.html": {
    "href": "README.html",
    "title": "FFME: WPF MediaElement Alternative | WPF MediaElement replacement based on FFmpeg",
    "keywords": "FFME: WPF MediaElement Alternative ⭐ Please star this project if you find it useful! A new porting effort is underway! Please check out FFplay.NET Features Overview FFME is a close drop-in replacement for Microsoft's WPF MediaElement Control . While the standard MediaElement uses DirectX (DirectShow) for media playback, FFME uses FFmpeg to read and decode audio and video. This means that for those of you who want to support stuff like HLS playback, or just don't want to go through the hassle of installing codecs on client machines, using FFME might be the answer. FFME implements additional improvements over the standard MediaElement such as: Asynchronous and synchronous frame scrubbing Fast media seeking Frame-by-frame seeking Media properties such as Position, NaturalDuration, SpeedRatio, and Volume (among others) are exposed as dependency properties Additional and extended media events ... all in a self-contained assembly (dll) Known Limitations Your help is welcome! SpeedRatio other than 1.0 should adjust audio pitch. Currently, if SpeedRatio is less than 1.0, there is no audio playback, and if SpeedRatio is greater than 1.0, samples just play faster. This situation can be greatly improved by manually manipulating the samples passed to NAudio. ( To be confirmed ) Writing to the Position dependency property from another dependency property may make the source value lose synchronization with the target value. ( Nice to have ) It would be nice to implement a method on the control that is able to extract a copy of the current video frame. There currently is no support for opening capture devices such as webcams or TV cards. While this is not too hard to do, it is not (yet) implemented in this library. Compiling, Running and Testing Please note that I am unable to distribute FFmpeg's binaries because I don't know if I am allowed to do so. Follow the instructions below to compile, run and test FFME Clone this repository. Before you open the solution, please make sure you download the FFmpeg win32-shared binaries from Zeranoe FFmpeg Builds . Extract the contents of the 7z file you just downloaded and locate the bin folder. You should see 3 exe files and 8 dll files. Select and copy all of them. Now paste all 11 files from the prior step onto the following folder (inside the cloned repository): {repositiories root}\\ffmediaelement\\Unosquare.FFmpegMediaElement\\ffmpeg32 . Open the solution and set the Unosquare.FFmpegMediaElement.Tests project as the startup project. You can do this by right clicking on the project and selecting Set as startup project Click on Start to run the project. You should see a very simplistic media player. Enter a URL or a path to a file in the textbox at the top of the window and then click on Open . The file or URL should play immediately. You can use the resulting compiled assembly in your project without further dependencies FFME is entirely self-contained. The locations of the compiled FFME assembly, depending on your build configuration are either ...\\ffmediaelement\\Unosquare.FFmpegMediaElement\\bin\\Debug\\Unosquare.FFmpegMediaElement.dll or ...\\ffmediaelement\\Unosquare.FFmpegMediaElement\\bin\\Release\\Unosquare.FFmpegMediaElement.dll Using FFME in your Project The Unosquare.FFmpegMediaElement.Tests project shows most common usages Create a new WPF application Add a reference to Unosquare.FFmpegMediaElement.dll In your MainForm.xaml , add the namespace: xmlns:ffme=\"clr-namespace:Unosquare.FFmpegMediaElement;assembly=Unosquare.FFmpegMediaElement\" Finally, create an instance of the FFME control in your MainForm.xaml as follows: <ffme:MediaElement x:Name=\"MediaEl\" Background=\"Gray\" LoadedBehavior=\"Play\" UnloadedBehavior=\"Manual\" /> Thanks In no particular order To the FFmpeg team for making the Swiss Army Knife of media. To Kyle Schwarz for creating and making Zeranoe FFmpeg builds available to everyone . To the NAudio team for making the best audio library out there for .NET To Ruslan Balanukhin for his FFmpeg interop bindings generator tool: FFmpeg.AutoGen . To Martin Bohme for his excellent tutorial on creating a video player with FFmpeg. Similar Projects Microsoft FFmpeg Interop WPF-MediaKit LibVLC.NET Microsoft Player Framework License The NAudio portion of this library Unosquare.FFmpegMediaElement\\NAudio is distributed under Ms-PL. Please see LICENSE.txt . Code generated by the FFmpeg.Autogen tool Unosquare.FFmpegMediaElement\\FFmpeg.Autogen does not specify a license by the tool's author. The source code of the FFME project excluding the items above is distributed under the Ms-PL."
  },
  "api/Unosquare.FFmpegMediaElement.MediaElement.FFmpegPaths.html": {
    "href": "api/Unosquare.FFmpegMediaElement.MediaElement.FFmpegPaths.html",
    "title": "Class MediaElement.FFmpegPaths | WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaElement.FFmpegPaths Provides access to the paths where FFmpeg binaries are extracted to Inheritance System.Object MediaElement.FFmpegPaths Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace :Unosquare.FFmpegMediaElement Assembly :cs.temp.dll.dll Syntax public static class FFmpegPaths Properties BasePath Gets the path to where the FFmpeg binaries are stored Declaration public static string BasePath { get; } Property Value Type Description System.String FFmpeg Gets the full path to ffmpeg.exe Declaration public static string FFmpeg { get; } Property Value Type Description System.String FFplay Gets the full path to ffplay.exe Declaration public static string FFplay { get; } Property Value Type Description System.String FFprobe Gets the full path to ffprobe.exe Declaration public static string FFprobe { get; } Property Value Type Description System.String"
  },
  "api/Unosquare.FFmpegMediaElement.MediaPlaybackErrorCode.html": {
    "href": "api/Unosquare.FFmpegMediaElement.MediaPlaybackErrorCode.html",
    "title": "Enum MediaPlaybackErrorCode | WPF MediaElement replacement based on FFmpeg",
    "keywords": "Enum MediaPlaybackErrorCode Enumerates Media Playback error codes Namespace :Unosquare.FFmpegMediaElement Assembly :cs.temp.dll.dll Syntax public enum MediaPlaybackErrorCode Fields Name Description FillFramesFailed FrameExtractionLoopForcedPause LoadFramesFailedCritical LoadFramesFailedForCurrentPosition LoadFramesFailedInFirstSegment SeekFailedCritical SeekFailedFFmpeg SeekFailedWillRetry WaitForPlaybackTimedOut"
  },
  "api/Unosquare.FFmpegMediaElement.html": {
    "href": "api/Unosquare.FFmpegMediaElement.html",
    "title": "Namespace Unosquare.FFmpegMediaElement | WPF MediaElement replacement based on FFmpeg",
    "keywords": "Namespace Unosquare.FFmpegMediaElement Classes MediaElement Represents a control that contains audio and/or video. In contrast with System.Windows.Controls.MediaElement, this version uses the FFmpeg library to perform reading and decoding of media streams. MediaElement.FFmpegPaths Provides access to the paths where FFmpeg binaries are extracted to MediaErrorRoutedEventArgs Represents an event that occurs when the underlying media stream fails to load or corrupt packets are found within the stream. MediaPlaybackException Represents an error that occurs during media playback or during a seek operation. Enums MediaPlaybackErrorCode Enumerates Media Playback error codes"
  },
  "api/Unosquare.FFmpegMediaElement.MediaErrorRoutedEventArgs.html": {
    "href": "api/Unosquare.FFmpegMediaElement.MediaErrorRoutedEventArgs.html",
    "title": "Class MediaErrorRoutedEventArgs | WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaErrorRoutedEventArgs Represents an event that occurs when the underlying media stream fails to load or corrupt packets are found within the stream. Inheritance System.Object MediaErrorRoutedEventArgs Namespace :Unosquare.FFmpegMediaElement Assembly :cs.temp.dll.dll Syntax public class MediaErrorRoutedEventArgs : RoutedEventArgs Properties ErrorException Gets the error exception. Declaration public Exception ErrorException { get; } Property Value Type Description System.Exception"
  },
  "api/Unosquare.FFmpegMediaElement.MediaPlaybackException.html": {
    "href": "api/Unosquare.FFmpegMediaElement.MediaPlaybackException.html",
    "title": "Class MediaPlaybackException | WPF MediaElement replacement based on FFmpeg",
    "keywords": "Class MediaPlaybackException Represents an error that occurs during media playback or during a seek operation. Inheritance System.Object System.Exception MediaPlaybackException Inherited Members System.Exception.GetBaseException() System.Exception.ToString() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.Message System.Exception.Data System.Exception.InnerException System.Exception.TargetSite System.Exception.StackTrace System.Exception.HelpLink System.Exception.Source System.Exception.HResult System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() Namespace :Unosquare.FFmpegMediaElement Assembly :cs.temp.dll.dll Syntax public class MediaPlaybackException : Exception, ISerializable, _Exception Constructors MediaPlaybackException(String, MediaPlaybackErrorCode, String) Declaration public MediaPlaybackException(string component, MediaPlaybackErrorCode errorCode, string message) Parameters Type Name Description System.String component MediaPlaybackErrorCode errorCode System.String message Properties Component Declaration public string Component { get; } Property Value Type Description System.String ErrorCode Declaration public MediaPlaybackErrorCode ErrorCode { get; } Property Value Type Description MediaPlaybackErrorCode"
  }
}